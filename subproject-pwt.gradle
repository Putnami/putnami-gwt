ext {
	releaseVersion = '1.1.0-RC1'
	snapshotVersion = '1.1.0-SNAPSHOT'
	gwtVersion = '2.6.1'
	guavaVersion = '17.0'
	
	applyLicense = rootProject.file('LICENSE_LGPL_HEADER').exists()
}


apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'gwt-base'

if (applyLicense) {
	apply plugin: 'license'
}

group = 'fr.putnami.pwt'
version = project.releaseVersion

sourceCompatibility = 1.7
targetCompatibility = 1.7

eclipse {
	classpath {
		downloadSources=true
	}
}

configurations {
	log4j
	deployerSsh
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {	
	log4j 'org.slf4j:slf4j-api:1.6.1'
	log4j 'org.slf4j:jcl-over-slf4j:1.6.1'
	log4j 'org.slf4j:slf4j-log4j12:1.6.1'
	log4j 'log4j:log4j:1.2.16'
	
	deployerSsh "org.apache.maven.wagon:wagon-ssh:2.2"
	
	compile "com.google.guava:guava:$guavaVersion"
	compile "com.google.guava:guava-gwt:$guavaVersion"
	runtime configurations.log4j

	testCompile 'junit:junit:4.+'

}

if (applyLicense) {
	license {
		skipExistingHeaders = true
		header rootProject.file('LICENSE_LGPL_HEADER')
		ext.projectName = project.name
	}
}
gwt {
	gwtVersion =  project.gwtVersion
	eclipse{
		addGwtContainer=false
	}
}


if (rootProject.tasks.findByPath(':publishAll') != null) {
	rootProject.tasks.publishAll.dependsOn project.tasks.uploadArchives
}
if (rootProject.tasks.findByPath(':publishAllToMavenLocal') != null) {
	rootProject.tasks.publishAllToMavenLocal.dependsOn project.tasks.install
}
if (applyLicense) {
	project.tasks.publish.dependsOn project.tasks.licenseFormat
	if (rootProject.tasks.findByPath(':licenseAll') != null ) {
		rootProject.tasks.licenseAll.dependsOn project.tasks.license
	}
	if (rootProject.tasks.findByPath(':licenseFormatAll') != null) {
		rootProject.tasks.licenseFormatAll.dependsOn project.tasks.licenseFormat
	}
}




if (project.name != 'pwt-doc'){
	//Include all non java (like *.gwt.xml) files from 'src/main/java' folder in resources
	sourceSets.main.resources.srcDir 'src/main/java'

	// Add all sources in jar (needed for GWT compilation using this library
	jar {
		from sourceSets.main.allJava
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
			    from components.java
			}
		}
	}
	
	if (rootProject.tasks.findByPath(':publishAllLibs') != null) {
		rootProject.tasks.publishAllLibs.dependsOn project.tasks.uploadArchives
	}
	if (rootProject.tasks.findByPath(':publishAllLibsToMavenLocal') != null) {
		rootProject.tasks.publishAllLibsToMavenLocal.dependsOn project.tasks.install
	}
}
 

uploadArchives {
    repositories {
        mavenDeployer {
	        configuration = configurations.deployerSsh
	        repository(url: "scp://repo.putnami.org/putnamiRepo") {
	            authentication(userName: "putnami_repo")
	        }
            //repository(url : new File(rootProject.buildDir, 'repoTest').toURI())
            pom.project {
                licenses {
                    license {
                        name 'GNU Lesser General Public License'
                        url 'http://www.gnu.org/licenses/lgpl-3.0.html'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
