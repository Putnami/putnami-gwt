import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'gwt'
apply plugin: 'jetty'

sourceSets.main.resources.srcDir 'src/main/java'

dependencies {
	compile project(':pwt')
	compile project(':pwt-code-editor')
	compile project(':pwt-google-analytics')
	compile project(':pwt-ajax-bot-indexing')
}

gwt {
	maxHeapSize = "2G";

	modules = ['fr.putnami.pwt.doc.Documentation']
	devModules = ['fr.putnami.pwt.doc.DocumentationDev']
	
	compiler {
		localWorkers = 2
	}
	compileGwt {
		// We just invert the order of the sources files to use the processed ressources first in GWT compilation
		src =  files(sourceSets.main.output.resourcesDir, sourceSets.main.java.srcDirs)
	}
	gwtDev {
		jvmArgs('-Xdebug',  '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000')
	}
	superDev {
		noPrecompile=true
	}
}

processResources {
	// work-around for filter corrupting  resources on the build
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.properties'
        include '**/*.xml'
		filter(ReplaceTokens, tokens: rootProject.ext.getProperties())
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.properties'
        exclude '**/*.xml'
    }
}

war {
	from(webAppDirName) {
		include '**/*.html' 
		filter(ReplaceTokens, tokens: rootProject.ext.getProperties())
	}
	from(webAppDirName) {
		exclude '**/*.html' 
	}
}

draftWar {
	from(webAppDirName) {
		include '**/*.html' 
		filter(ReplaceTokens, tokens: rootProject.ext.getProperties())
	}
	from(webAppDirName) {
		exclude '**/*.html' 
	}
}

task jettyDraftWar(type: JettyRunWar) {
	dependsOn draftWar
	dependsOn.remove('war')
	webApp=draftWar.archivePath
}

