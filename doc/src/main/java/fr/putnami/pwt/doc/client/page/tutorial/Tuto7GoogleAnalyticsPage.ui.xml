<!--

    This file is part of pwt.

    pwt is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    pwt is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with pwt.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
	xmlns:w="urn:import:fr.putnami.pwt.core.widget.client"
	xmlns:c="urn:import:fr.putnami.pwt.plugin.code.client">

	<ui:import field="fr.putnami.pwt.plugin.code.client.configuration.java.JavaConfiguration.JAVA_CONFIGURATION" />
	<ui:import field="fr.putnami.pwt.plugin.code.client.configuration.xml.XmlConfiguration.XML_CONFIGURATION" />

	<w:HTMLPanel title="PWT - Tutorial Part 7 - Add Google Analytics to your app">
		<w:Header ui:field="header">
			<w:Heading level="1">Part 7 - Add Google Analytics to your app</w:Heading>
		</w:Header>
		<w:HTMLPanel ui:field="content">
		
			<ul class="pager">
				<li class="previous"><a href="#!Tuto6">&larr; Part 6 : Build a theme</a></li>
				<li class="next"><a href="#!Tuto8">Part 8 : Add Ajax Bot Filter &rarr;</a></li>
			</ul>
			
			<p>In this tutorial, we will add the google analytics plugin allowing our app (from  <em><a href="#!Tuto6">Part 6 : Build a theme</a></em>) to be audited via Google Analytics.</p>
			
			<w:Heading level="2" summary="docSummary">Step 1 : <em>Add the dependency in the build script</em></w:Heading>
			
			<p>Simply add the following dependency in the <code>build.gradle</code> file :</p>
			<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
dependencies {
	...
	compile 'fr.putnami.pwt:pwt-google-analytics:@releaseVersion@'
}]]></pre>
			</c:StaticCode>
			
			<p>or in the <code>pom.xml</code> file :</p>
			<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
<dependency>
	<groupId>fr.putnami.pwt</groupId>
	<artifactId>pwt-google-analytics</artifactId>
	<version>@releaseVersion@</version>
</dependency>]]></pre>
			</c:StaticCode>
			
			<p>Don't forget to add the dependency in the Module xml file (here the <code>fr/putnami/pwt/tutorial/Tutorial.gwt.xml</code>) :</p>
			<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
	!-- PWT Module to extends in order to use PWT Google analytics features-->
	<inherits name="fr.putnami.pwt.plugin.ga.GoogleAnalytics"/>]]></pre>
			</c:StaticCode>
			
			
			<w:Heading level="2" summary="docSummary">Step 2 : <em>Init the plugin and track Places</em></w:Heading>
			
			<p>To init the plugin, add to the application entry point (here <code>TutorialApp</code>) :</p>
			<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
	@EntryPointHandler
	void installGA() {
		GoogleAnalytics analytics = GoogleAnalytics.init("UA-XXXXXXXX-Y", "your-domain.tld");
		analytics.forceSSL(true); //If you want to force ssl
	}]]></pre>
			</c:StaticCode>
			
			<p>This activate the Place change auditing (ie. it treat a place as if it was a page for Google Analytics).</p>
			
			
			<w:Heading level="2" summary="docSummary">Step 3 : <em>Enable the Display Features and uncaught error handling</em></w:Heading>
			
			<p>You may want to enable the "Display Feature" and / or the report of uncaught errors.
			To do so, it is very simple, just add the following to the previous configuration :</p>
			<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
	analytics.displayfeatures(); // If you want to enable the display features
	analytics.handleUncaughtException(true); // If you want to handle uncaught exception]]></pre>
			</c:StaticCode>
			
			
			<w:Heading level="2" summary="docSummary">Step 4 : <em>Track events and track social data</em></w:Heading>
			<p>If you want to track a particular event, you can simply do it with the <code>GoogleAnalytics.trackPage(...)</code> methods.</p>
			
			<p>We are going to track all the click on the <code>WelcomeView</code>'s "About" button. To do so, just modify the <code>WelcomeView</code> class :</p>
			<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
	@UiHandler("aboutButton")
	public void onAboutButton(ButtonEvent event) {
		GoogleAnalytics.get("UA-XXXXXXXX-Y").trackEvent("click", "Welcome About button");
		MvpController.get().goTo(AboutPlace.INSTANCE);
	}]]></pre>
			</c:StaticCode>
			
			<p>If it was a social button we could have done :</p>
			<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
	@UiHandler("aboutButton")
	public void onAboutButton(ButtonEvent event) {
		GoogleAnalytics.get("UA-XXXXXXXX-Y").trackSocial("facebook", "like", "http://mycoolpage.com");
		MvpController.get().goTo(AboutPlace.INSTANCE);
	}]]></pre>
			</c:StaticCode>
			

			<w:Alert ><h4>Note :</h4><p>You can see the result in the <code>tutorials/Part7</code> folder in the PWT sources.</p></w:Alert>			
			
			<ul class="pager">
				<li class="previous"><a href="#!Tuto6">&larr; Part 6 : Build a theme</a></li>
				<li class="next"><a href="#!Tuto8">Part 8 : Add Ajax Bot Filter &rarr;</a></li>
			</ul>
		</w:HTMLPanel>
	</w:HTMLPanel>
</ui:UiBinder>