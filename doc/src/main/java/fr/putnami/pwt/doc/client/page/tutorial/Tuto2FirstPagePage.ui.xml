<!--

    This file is part of pwt.

    pwt is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    pwt is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with pwt.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
	xmlns:w="urn:import:fr.putnami.pwt.core.widget.client"
	xmlns:c="urn:import:fr.putnami.pwt.plugin.code.client">

	<ui:import field="fr.putnami.pwt.plugin.code.client.configuration.java.JavaConfiguration.JAVA_CONFIGURATION" />
	<ui:import field="fr.putnami.pwt.plugin.code.client.configuration.xml.XmlConfiguration.XML_CONFIGURATION" />

	<w:HTMLPanel title="PWT - Tutorial Part 2 - Build the Welcome Page">
		<w:Header ui:field="header">
			<w:Heading level="1">Part 2 - Build the Welcome Page</w:Heading>
		</w:Header>
		<w:HTMLPanel ui:field="content">
		
			<ul class="pager">
				<li class="previous"><a href="#!Tuto1">&larr; Part 1 : Init a PWT project</a></li>
				<li class="next"><a href="#!Tuto3">Part 3 : Build more pages &rarr;</a></li>
			</ul>
		
			<p>In this tutorial, we will add a static welcome page to the project inited in <em><a href="#!Tuto1InitGradle">Part 1 : Init a PWT project</a></em></p>
			
			<w:Heading level="2" summary="docSummary">Step 1 : <em>Ensure the Module XML configuration</em></w:Heading>
			<p>In order to use the <strong title="Putnami Web Toolkit">PWT</strong>'s widgets and MVP features, the module XML file must containe the following :</p>
			
			<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
<!-- PWT Module to extends in order to use PWT widgets-->
<inherits name="fr.putnami.pwt.core.widget.Widget"/>
<!-- PWT Module to extends in order to use PWT MVP features-->
<inherits name="fr.putnami.pwt.core.mvp.Mvp"/>]]></pre>
			</c:StaticCode>
			
			<w:Heading level="2" summary="docSummary">Step 2 : <em>Create the Place</em></w:Heading>
			
			<p>To create a place, you have to extends <code>ViewPlace</code> and add the annotation <code>@ActivityDescription</code>. 
			The view declared must at least implement <code>IsWidget</code>.</p>
			
			<p>We create a very simple view for now :</p>
			<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
package fr.putnami.pwt.tutorial.client.welcome;

import com.google.gwt.user.client.ui.Composite;

import fr.putnami.pwt.core.mvp.client.View;
import fr.putnami.pwt.core.widget.client.OutputStaticText;

public class WelcomeView extends Composite implements View {

	public WelcomeView() {
		initWidget(new OutputStaticText("Welcome Putnami"));
	}
}
]]></pre>
			</c:StaticCode>
			
			<p>Then the place :</p>
			<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
package fr.putnami.pwt.tutorial.client.welcome;

import fr.putnami.pwt.core.mvp.client.ViewPlace;
import fr.putnami.pwt.core.mvp.client.annotation.ActivityDescription;

@ActivityDescription(view = WelcomeView.class)
public class WelcomePlace extends ViewPlace {
}
]]></pre>
			</c:StaticCode>
			
			<w:Heading level="2" summary="docSummary">Step 3 : <em>Declare the activity</em></w:Heading>
			<p>We have some configurations to do in the application entry point.</p>
			<p>First of all, we have to define the display associated with the <code>ActivityManager</code> and add it to the <code>RootPanel</code>.
			Then we have to Register the new place <code>WelcomePlace</code> and set it as default.</p>
			<p>To do that, We will use the annotation based configuration. Our entry point has now to implements the <code>Module</code> interface.</p>
			
			<p>Don't forget to add the dependency to the <code>Inject</code> module in the Module xml file (here the <code>fr/putnami/pwt/tutorial/Tutorial.gwt.xml</code>) :</p>
			<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
	<!-- PWT Module to extends in order to use PWT Inject features-->
	<inherits name="fr.putnami.pwt.core.inject.Inject"/>
]]></pre>
			</c:StaticCode>
			
			<p>So the application entry point <code>TutorialApp</code> becomes: </p>
			<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
package fr.putnami.pwt.tutorial.client;

import fr.putnami.pwt.core.inject.client.Module;
import fr.putnami.pwt.core.inject.client.annotation.MvpDescription;
import fr.putnami.pwt.core.widget.client.OneWidgetPanel;

import fr.putnami.pwt.tutorial.client.welcome.WelcomePlace;

@MvpDescription(
		display = OneWidgetPanel.class,
		defaultPlace = WelcomePlace.class,
		activities = {
				WelcomePlace.class
		})
public class TutorialApp implements Module {

}]]></pre>
			</c:StaticCode>
			
			<p>Now we run the app with <kbd>gradle jettyDraftWar</kbd> or <kbd>mvn -Pdev jetty:run</kbd>.</p>
			<p>You should see the <code>WelcomeView</code> content (displays "Welcome Putnami").</p>
			
			
			<w:Heading level="2" summary="docSummary">Step 4 : <em>Build a nice layout with UiBinding</em></w:Heading>
			<p>We've created the view but it does'nt look very pretty !</p>
			<p>Let's pimp my View!</p>
			
			<p>Make the view as <code>@Templated</code> :</p>
			<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
package fr.putnami.pwt.tutorial.client.welcome;

import com.google.gwt.user.client.ui.Composite;

import fr.putnami.pwt.core.inject.client.annotation.Templated;
import fr.putnami.pwt.core.mvp.client.View;

@Templated
public class WelcomeView extends Composite implements View {
}
]]></pre>
			</c:StaticCode>
			
			<p>And now, we use the <code>fr/putnami/pwt/tutorial/client/welcome/WelcomeView.ui.xml</code> file to define the view :</p>
			<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
	xmlns:w="urn:import:fr.putnami.pwt.core.widget.client">

	<w:HTMLPanel styleName="container">
		<w:Heading level="1" text="Putnami Web Toolkit tutorial" subtext="Discover PWT" styleName="page-header"/>
		<w:Container tag="div" styleName="jumbotron text-center">
			<w:GridRow>
				<w:GridColumn size="10" offset="1">
					<p>Welcome to this PWT Tutorial</p>
				</w:GridColumn>
			</w:GridRow>
		</w:Container>
	</w:HTMLPanel>
</ui:UiBinder>]]></pre>
			</c:StaticCode>
			
			<w:Alert><h4>Note : </h4><p>As you can see, we also use the Bootstrap's css classes to stylize some components.</p></w:Alert>
			
			
			<w:Heading level="2" summary="docSummary">Step 5 : <em>Test the app</em></w:Heading>
			<p>In order to run the app in dev mode, use</p>
			<p><kbd>gradle gwtDev</kbd> or <kbd>mvn -Pdev jetty:run</kbd></p>
			<p>That's it !</p>

			<w:Alert ><h4>Note :</h4><p>You can see the result in the <code>tutorials/Part2</code> folder in the PWT sources.</p></w:Alert>			
			
			<ul class="pager">
				<li class="previous"><a href="#!Tuto1">&larr; Part 1 : Init a PWT project</a></li>
				<li class="next"><a href="#!Tuto3">Part 3 : Build more pages &rarr;</a></li>
			</ul>
		</w:HTMLPanel>
	</w:HTMLPanel>
</ui:UiBinder>