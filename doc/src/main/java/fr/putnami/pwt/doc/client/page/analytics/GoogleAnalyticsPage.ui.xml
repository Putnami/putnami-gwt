<!--

    This file is part of pwt.

    pwt is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    pwt is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with pwt.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
	xmlns:w="urn:import:fr.putnami.pwt.core.widget.client"
	xmlns:c="urn:import:fr.putnami.pwt.plugin.code.client">
	
	<ui:import field="fr.putnami.pwt.plugin.code.client.configuration.xml.XmlConfiguration.XML_CONFIGURATION" />
	<ui:import field="fr.putnami.pwt.plugin.code.client.configuration.java.JavaConfiguration.JAVA_CONFIGURATION" />

	<ui:with field="switchItems" type="java.util.List" />
	
	<w:HTMLPanel title="PWT - Google Analytics Plugin">
		<w:Header ui:field="header">
			<w:Heading level="1">Google analytics plugin</w:Heading>
			<p class="lead">
			This plugin tracks your visitor actions. Each visited places are reported in your google analytics account. 
			You can also track user events, social network events, and exception events. The Ecommerce tracking is not supported yet. 
			</p>
		</w:Header>
		<w:HTMLPanel ui:field="content">
			
			<w:Heading level="2" summary="docSummary">Dependency</w:Heading>
			
			<w:InputSwitch ui:field="switchBuild" items="{switchItems}" styleName="pull-right"/>
			<p>First you need to add a dependency on the google analytics indexing plugin :</p>
			<div class="clearfix"></div>
			
			<w:HTMLPanel styleName="showcase-sample-block" ui:field="buildGradlePanel">
				<div class="showcase-sample">
					<p>in the <code>build.gradle</code> file</p>
				</div>
	  			<c:StaticCode configuration="{JAVA_CONFIGURATION}">
					<pre><![CDATA[
dependencies {
	"fr.putnami.pwt:pwt-google-analytics:$pwtVersion"
}
]]></pre>
	  			</c:StaticCode>
  			</w:HTMLPanel>
 			<w:HTMLPanel styleName="showcase-sample-block" ui:field="buildMavenPanel">
				<div class="showcase-sample">
					<p>in the <code>pom.xml</code> file</p>
				</div>
	  			<c:StaticCode configuration="{XML_CONFIGURATION}">
					<pre><![CDATA[
<dependency>
	<groupId>fr.putnami.pwt</groupId>
	<artifactId>pwt-google-analytics</artifactId>
	<version>${pwt.version}</version>
</dependency>
]]></pre>
		  		</c:StaticCode>
			</w:HTMLPanel>
		
			<w:Heading level="2" summary="docSummary">Setup</w:Heading>
			<p>
			To setup the plugin you have to call init method on <code>GoogleAnalytics</code> class. 
			</p>
			<p>
			If the domain is not set, the analytics plugin will tracks events even if you are on a localhost server.
			</p>
			<p>
			You can enforce the ssl communication with the <code>forceSSL</code> method.
			</p>
			<p>
			Once initialized, the plugin tracks all visited pages. 
			Plugged on the MVP framework it sends a pageview event for each visited place.  			
			</p>
	  		<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
GoogleAnalytics analytics = GoogleAnalytics.init("{TACK_ID}", "{mydomain.com}");
analytics.forceSSL(true);
]]></pre>
	  		</c:StaticCode>
			<w:Alert>
				<strong>Note</strong>
				<p>This plugin requires an google analytics account.</p>
				<p>Please visit google analytics website first : <a href="https://www.google.com/analytics" target="_blank">https://www.google.com/analytics</a></p>
			</w:Alert>
			
			<w:Heading level="2" summary="docSummary">Events tracking</w:Heading>
			<p>
				You can track custom actions by invoking the <code>trackEvent</code> method.
			</p>
			<p>
				<strong>parameters :</strong>
			</p>
			<ul>
				<li><strong>category</strong> : Typically the object that was interacted with (required)</li>
				<li><strong>actoin</strong> : The type of interaction  (required) </li>
				<li><strong>label</strong> : Useful for categorizing events </li>
				<li><strong>value</strong> : Values must be non-negative. Useful to pass counts</li>
			</ul>
	  		<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
@UiHandler("myButton")
public void onMyButtonClick(ClickEvent evt) {
	analytics.trackEvent("button", "click", "nav buttons", 4);
}
]]></pre>
	  		</c:StaticCode>

			<w:Heading level="2" summary="docSummary">Social tracking</w:Heading>
			<p>
				You can track social network actions with the <code>trackSocial</code> method.
			</p>
			<p>
				<strong>parameters :</strong>
			</p>
			<ul>
				<li><strong>socialNetwork</strong> : The network on which the action occurs (e.g. Facebook, Twitter)</li>
				<li><strong>socialAction</strong> : The type of action that happens (e.g. Like, Send, Tweet).</li>
				<li><strong>socialTarget</strong> : Specifies the target of a social interaction. This value is typically a URL but can be any text. (e.g. http://mycoolpage.com)</li>
			</ul>
	  		<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
@UiHandler("mySocialButton")
public void onMySocialButtonClick(ClickEvent evt) {
	analytics.trackSocial("facebook", "like", "http://mycoolpage.com"));
}
]]></pre>
			</c:StaticCode>

			<w:Heading level="2" summary="docSummary">Exception tracking</w:Heading>
			<p>
				You can automatically track uncaught exception by invoking the <code>handleUncaughtException</code> method.
			</p>
	  		<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
GoogleAnalytics analytics = GoogleAnalytics.init("{TACK_ID}", "{mydomain.com}");
analytics.handleUncaughtException(true);
]]></pre>
	  		</c:StaticCode>
	  		<p>
	  			You can equally manually track exception event with the <code>trackException</code> method.
	  		</p>
			<p>
	  			<strong>Parameters :</strong> 
			</p>
			<ul>
				<li><strong>description</strong> : A description of the exception.</li>
				<li><strong>fatal</strong> : Indicates whether the exception was fatal. true indicates fatal.</li>
			</ul>
			<p>
				
			</p>
	  		<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
@AsyncHandler
void onSavePersonThrown(Throwable thrown) {
	analytics.trackException(thrown.getMessage(), false);
}
]]></pre>
	  		</c:StaticCode>

			<w:Heading level="2" summary="docSummary">Display Features</w:Heading>
			<p>
				You can enable the display feature of google analytics with the <code>displayfeatures</code> method.
				This Feature is quite usefull to report the user demographics profil (Age, Gender, and Interest). You can better understand who your users are.
			</p>
	  		<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
GoogleAnalytics analytics = GoogleAnalytics.init("{TACK_ID}", "{mydomain.com}");
analytics.displayfeatures();
]]></pre>
	  		</c:StaticCode>
			
		</w:HTMLPanel>
	</w:HTMLPanel>
</ui:UiBinder>