<!--

    This file is part of pwt-doc.

    pwt-doc is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    pwt-doc is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with pwt-doc.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
	xmlns:w="urn:import:fr.putnami.pwt.core.widget.client"
	xmlns:c="urn:import:fr.putnami.pwt.plugin.code.client">

	<ui:import field="fr.putnami.pwt.plugin.code.client.configuration.xml.XmlConfiguration.XML_CONFIGURATION" />
	<ui:import field="fr.putnami.pwt.plugin.code.client.configuration.java.JavaConfiguration.JAVA_CONFIGURATION" />

	<ui:with field="tableOfContent" type="fr.putnami.pwt.core.widget.client.NavSpy" />
	<w:HTMLPanel title="PWT - Table UI Components">
		<w:Header ui:field="header">
			<w:Heading level="1" navSpy="{tableOfContent}">Tables</w:Heading>
			<p class="lead"><strong title="Putnami Web Toolkit">PWT</strong> provides two ways to create HTML <code>Table</code>
			</p>
		</w:Header>
		<w:HTMLPanel ui:field="content">
			<w:Heading level="2" navSpy="{tableOfContent}">Simple Table</w:Heading>
			
			<w:Heading level="3" navSpy="{tableOfContent}">Basic usage</w:Heading>
			<p>You can declaratively define a table which is compatible with the <strong title="Putnami Web Toolkit">PWT</strong> data binding feature. The <code>Table</code> component extends <code>AbstractPanel</code> so inherit all of it the utilities.</p>
			<p>Use <code>TableBody</code>, <code>TableRow</code> children and <code>TableTH</code> and <code>TableTD</code> to create table cells (which extends <code>AbstractPanel</code>).</p>
			<p>If no <code>TableBody</code> is provided, a default one is created.</p>
			<div class="showcase-sample-block">
				<div class="showcase-sample">
					<w:Table>
						<w:TableBody bodyId="main">
							<w:TableRow>
								<w:TableTH>
									<w:Label>Body 1, Table Header, Column 1</w:Label>
								</w:TableTH>
								<w:TableTH>
									<w:Label>Body 1, Table Header, Column 2</w:Label>
								</w:TableTH>
							</w:TableRow>
							<w:TableRow>
								<w:TableTD>
									<w:Text>Body 1, Table Row, Column 1</w:Text>
								</w:TableTD>
								<w:TableTD>
									<w:Text>Body 1, Table Row, Column 2</w:Text>
								</w:TableTD>
							</w:TableRow>
						</w:TableBody>
						<w:TableBody bodyId="second">
							<w:TableRow>
								<w:TableTH>
									<w:Label>Body 2, Table Header, Column 1</w:Label>
								</w:TableTH>
								<w:TableTH>
									<w:Label>Body 2, Table Header, Column 2</w:Label>
								</w:TableTH>
								<w:TableTH>
									<w:Label>Body 2, Table Header, Column 3</w:Label>
								</w:TableTH>
							</w:TableRow>
							<w:TableRow>
								<w:TableTD>
									<w:Text>Body 2, Table Row, Column 1</w:Text>
								</w:TableTD>
								<w:TableTD>
									<w:Text>Body 2, Table Row, Column 2</w:Text>
								</w:TableTD>
								<w:TableTD>
									<w:Text>Body 2, Table Row, Column 3</w:Text>
								</w:TableTD>
							</w:TableRow>
						</w:TableBody>
					</w:Table>
				</div>
				<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
<w:Table>
	<w:TableBody bodyId="main">
		<w:TableRow>
			<w:TableTH>
				<w:Label>Body 1, Table Header, Column 1</w:Label>
			</w:TableTH>
			<w:TableTH>
				<w:Label>Body 1, Table Header, Column 2</w:Label>
			</w:TableTH>
		</w:TableRow>
		<w:TableRow>
			<w:TableTD>
				<w:Text>Body 1, Table Row, Column 1</w:Text>
			</w:TableTD>
			<w:TableTD>
				<w:Text>Body 1, Table Row, Column 2</w:Text>
			</w:TableTD>
		</w:TableRow>
	</w:TableBody>
	<w:TableBody bodyId="second">
		<w:TableRow>
			<w:TableTH>
				<w:Label>Body 2, Table Header, Column 1</w:Label>
			</w:TableTH>
			<w:TableTH>
				<w:Label>Body 2, Table Header, Column 2</w:Label>
			</w:TableTH>
			<w:TableTH>
				<w:Label>Body 2, Table Header, Column 3</w:Label>
			</w:TableTH>
		</w:TableRow>
		<w:TableRow>
			<w:TableTD>
				<w:Text>Body 2, Table Row, Column 1</w:Text>
			</w:TableTD>
			<w:TableTD>
				<w:Text>Body 2, Table Row, Column 2</w:Text>
			</w:TableTD>
			<w:TableTD>
				<w:Text>Body 2, Table Row, Column 3</w:Text>
			</w:TableTD>
		</w:TableRow>
	</w:TableBody>
</w:Table>]]></pre>				
				</c:StaticCode>
			</div>
			
			<w:Heading level="3" navSpy="{tableOfContent}">Table customization</w:Heading>
			<p>You can use bootstrap table customization to customize the table style.</p>
			<p>Use the <code>striped</code> (default <code>true</code>), <code>condensed</code> (default <code>false</code>), <code>hover</code> (default <code>true</code>) and <code>bordered</code> (default <code>false</code>) properties to enable / disable customization.</p>
			<div class="showcase-sample-block">
				<div class="showcase-sample">
					<w:Table striped="false" condensed="true" bordered="true" hover="true">
						<w:TableRow>
							<w:TableTH>
								<w:Label>Body 1, Table Header, Column 1</w:Label>
							</w:TableTH>
							<w:TableTH>
								<w:Label>Body 1, Table Header, Column 2</w:Label>
							</w:TableTH>
							<w:TableTH>
								<w:Label>Body 1, Table Header, Column 3</w:Label>
							</w:TableTH>
						</w:TableRow>
						<w:TableRow>
							<w:TableTD>
								<w:Text>Body 1, Table Row, Column 1</w:Text>
							</w:TableTD>
							<w:TableTD>
								<w:Text>Body 1, Table Row, Column 2</w:Text>
							</w:TableTD>
							<w:TableTD>
								<w:Text>Body 1, Table Row, Column 3</w:Text>
							</w:TableTD>
						</w:TableRow>
						<w:TableRow>
							<w:TableTD>
								<w:Text>Body 1, Table Row, Column 1</w:Text>
							</w:TableTD>
							<w:TableTD>
								<w:Text>Body 1, Table Row, Column 2</w:Text>
							</w:TableTD>
							<w:TableTD>
								<w:Text>Body 1, Table Row, Column 3</w:Text>
							</w:TableTD>
						</w:TableRow>
						<w:TableRow>
							<w:TableTD>
								<w:Text>Body 1, Table Row, Column 1</w:Text>
							</w:TableTD>
							<w:TableTD>
								<w:Text>Body 1, Table Row, Column 2</w:Text>
							</w:TableTD>
							<w:TableTD>
								<w:Text>Body 1, Table Row, Column 3</w:Text>
							</w:TableTD>
						</w:TableRow>
					</w:Table>
				</div>
				<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
<w:Table striped="false" condensed="true" bordered="true" hover="true">
	<!-- Table content -->
</w:Table>]]></pre>				
				</c:StaticCode>
			</div>
			
			
			<w:Heading level="2" navSpy="{tableOfContent}">Collection binding Table</w:Heading>
			
			<w:Heading level="3" navSpy="{tableOfContent}">Basic usage</w:Heading>
			<p>With the <strong title="Putnami Web Toolkit">PWT</strong> data binding feature, you can also bind collections of data.</p>
			<p>To bind a <code>Collection</code> of java bean, the use of <code>TableEditor</code> allows to easily customize the properties and actions you want to display.</p>
			<p>Use the <code>TableEditor</code>, <code>TableEditorBody</code> children with <code>TableColumn</code> to define the Table display.</p>
			<p>If no <code>TableEditorBody</code> is provided, a default one is created.</p>
			<p>In each <code>TableColumn</code> you can define the <code>OutputFactory</code> or the <code>InputFactory</code> which should be used to render the propery.</p>
			<div class="showcase-sample-block">
				<div class="showcase-sample">
					<w:TableEditor ui:field="firstTable">
						<w:TableColumn path="gender"/>
						<w:TableColumn path="name"/>
						<w:TableColumn path="email">
							<w:OutputEmail />
						</w:TableColumn>
						<w:TableColumn path="address.city"/>
						<w:TableColumn >
							<w:Button type="ICON" iconType="VIEW" />
						</w:TableColumn>
					</w:TableEditor>
				</div>
				<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
<w:TableEditor ui:field="firstTable">
	<w:TableColumn path="gender"/>
	<w:TableColumn path="name"/>
	<w:TableColumn path="email">
		<w:OutputEmail />
	</w:TableColumn>
	<w:TableColumn path="address.city"/>
	<w:TableColumn >
		<w:Button type="ICON" iconType="VIEW" />
	</w:TableColumn>
</w:TableEditor>]]></pre>				
				</c:StaticCode>
				<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
public interface BeanModel extends Model<Bean> {
	Model<Bean> MODEL = GWT.create(BeanModel.class);
}

...

firstTable.initialize(BeanModel.Model);
firstTable.edit(List...);]]></pre>				
				</c:StaticCode>
			</div>
			
			<w:Heading level="3" navSpy="{tableOfContent}">Table editor customizing</w:Heading>
			<p>The <code>TableEditor</code> can be editable when you set the <code>readonly</code> property to <code>false</code>.</p>
			<p>You can easily customize the <code>TableEditor</code> by</p>
			<ul>
				<li>Adding a <code>Pagination</code> to the table.</li>
				<li>Adding a <code>TableOrder</code> column allowing to reorder the rows by drag and drop.</li>
				<li>Adding a <code>TableSelecter</code> column allowing to select the rows by checkbox (<code>selectionMode</code> set to <code>COLUMN</code>), by click on the row (<code>selectionMode</code> set to <code>ROW_CLICK</code>) or both (<code>selectionMode</code> set to <code>BOTH</code>).</li>
				<li>Adding a <code>AbstractTableColumnAspect</code> aspect to a column like <code>TableSort</code> (allows to sort the row by this column value).</li>
			</ul>
			<p>If you provide a <code>MessageHelper</code> to the editor. It will try to set the table header with the <code>MessageHelper</code> content.</p>
			<div class="showcase-sample-block">
				<div class="showcase-sample">
					<w:TableEditor ui:field="secondTable" readonly="false">
						<w:Pagination pageSize="2" />
						<w:TableOrder  />
						<w:TableSelecter selectionMode="COLUMN"/>
						<w:TableColumn path="gender" readonly="true">
							<w:TableSort />
						</w:TableColumn>
						<w:TableColumn path="name"/>
						<w:TableColumn path="email" readonly="true">
							<w:OutputEmail />
							<w:TableSort />
						</w:TableColumn>
						<w:TableColumn >
							<w:Button type="ICON" iconType="VIEW" />
						</w:TableColumn>
					</w:TableEditor>
				</div>
				<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
<w:TableEditor ui:field="secondTable" readonly="false">
	<w:Pagination pageSize="2" />
	<w:TableOrder  />
	<w:TableSelecter selectionMode="COLUMN"/>
	<w:TableColumn path="gender">
		<w:TableSort />
	</w:TableColumn>
	<w:TableColumn path="name"/>
	<w:TableColumn path="email" readonly="true">
		<w:OutputEmail />
		<w:TableSort />
	</w:TableColumn>
	<w:TableColumn >
		<w:Button type="ICON" iconType="VIEW" />
	</w:TableColumn>
</w:TableEditor>]]></pre>				
				</c:StaticCode>
				<c:StaticCode configuration="{JAVA_CONFIGURATION}">
<pre><![CDATA[
interface Constants extends ConstantsWithLookup {
	@DefaultStringValue("City")
	String city();

	@DefaultStringValue("Mr.")
	String genderMaleEnum();

	@DefaultStringValue("Mrs.")
	String genderFemaleEnum();

	@DefaultStringValue("Email")
	String email();

	@DefaultStringValue("Gender")
	String gender();

	@DefaultStringValue("Name")
	String name();
}

...

Constants constants = GWT.create(Constants.class);

...

secondTable.setMessageHelper(new MessageHelper(constants));
secondTable.initialize(BeanModel.Model);
secondTable.edit(List...);]]></pre>				
				</c:StaticCode>
				
			</div>
		</w:HTMLPanel>
	</w:HTMLPanel>

</ui:UiBinder>