<!--

    This file is part of pwt-doc.

    pwt-doc is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    pwt-doc is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with pwt-doc.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder"
	xmlns:w="urn:import:fr.putnami.pwt.core.widget.client"
	xmlns:c="urn:import:fr.putnami.pwt.plugin.code.client">

	<ui:import field="fr.putnami.pwt.plugin.code.client.configuration.java.JavaConfiguration.JAVA_CONFIGURATION" />
	<ui:import field="fr.putnami.pwt.plugin.code.client.configuration.xml.XmlConfiguration.XML_CONFIGURATION" />

	<w:HTMLPanel>
		<w:Heading level="2" summary="docSummary">Maven's users</w:Heading>
		<w:Heading level="3" summary="docSummary">Init the pom.xml</w:Heading>
		<ol>
			<li>Add the putnami repository</li>
			<li>Set compiler properties to Java 1.7</li>
			<li>Add pwt and gwt dependencies</li>
			<li>Init the maven compiler plugin to enforce java 1.7</li>
			<li>Add gwt plugin</li>
		</ol>
		<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
<!-- Add our maven repository (or install the artifacts in yours) : -->
<repositories>
	<repository>
		<id>putnami.org</id>
		<url>http://repo.putnami.org/</url>
	</repository>
</repositories>
<!-- Set the needed properties -->
<properties>
	<project.compiler.source>1.7</project.compiler.source>
	<project.compiler.target>1.7</project.compiler.target>
	<project.sourceEncoding>UTF-8</project.sourceEncoding>
</properties>

<!-- Then add the desired dependencies as well as  GWT's -->
<dependencies>
	<dependency>
		<groupId>fr.putnami.pwt</groupId>
		<artifactId>pwt</artifactId>
		<version>@releaseVersion@</version>
	</dependency>
	<!-- You may want to use these plugins -->
	<dependency>
		<groupId>fr.putnami.pwt</groupId>
		<artifactId>pwt-code-editor</artifactId>
		<version>@releaseVersion@</version>
	</dependency>
	
	<!-- GWT dependencies-->
	<dependency>
		<groupId>com.google.gwt</groupId>
		<artifactId>gwt-user</artifactId>
		<version>@gwtVersion@</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>com.google.gwt</groupId>
		<artifactId>gwt-servlet</artifactId>
		<version>@gwtVersion@</version>
	</dependency>
</dependencies>

<!-- Then configure the Maven plugins -->
<build>
	<pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${project.compiler.source}</source>
					<target>${project.compiler.target}</target>
					<encoding>${project.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>@gwtVersion@</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</pluginManagement>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
		</plugin>
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>gwt-maven-plugin</artifactId>
		</plugin>
		...
	</plugins>
</build>
]]></pre>
		</c:StaticCode>
		
		
		<w:Heading level="3" summary="docSummary">Make a GWT library</w:Heading>
		<p>View a full working <a href="https://github.com/Putnami/putnami-pwt/blob/master/samples/lib-project/pom.xml" target="_BLANK" >pom.xml</a></p>
		<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
<!-- Optionally add the gwt-dev dependency if needed -->
<dependency>
	<groupId>com.google.gwt</groupId>
	<artifactId>gwt-dev</artifactId>
	<version>@gwtVersion@</version>
	<scope>provided</scope>
</dependency>

<!-- And add the <em>resources</em> goal to Maven plugin in order to include java sources files in the generated jar (nedded for GWT compilation). -->
<plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>gwt-maven-plugin</artifactId>
	<version>@gwtVersion@</version>
	<executions>
		<execution>
			<goals>
				<goal>resources</goal>
				<goal>compile</goal>
			</goals>
		</execution>
	</executions>
</plugin>
...]]></pre>
		</c:StaticCode>
		
		<w:Heading level="3" summary="docSummary">Make a web app</w:Heading>
		<p>View a full working <a href="https://github.com/Putnami/putnami-pwt/blob/master/samples/web-project/pom.xml"  target="_BLANK">pom.xml</a></p>
		<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
<!-- Set the needed properties -->
<properties>
	...
	<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
	...
</properties>

<!-- Configure the needed Maven plugins -->
<build>
	<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>
	<pluginManagement>
		<plugins>
			...
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>exploded</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<webappDirectory>${webappDirectory}</webappDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>@gwtVersion@</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<configuration>
						<runTarget>... Your host Page if using dev mode ...</runTarget>
						<modules>
							<module>... Your module ...</module>
						</modules>
					</configuration>
					<hostedWebapp>${webappDirectory}</hostedWebapp>
				</configuration>
			</plugin>
			...
		</plugins>
	</pluginManagement>
	<plugins>
		...
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
		</plugin>
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>gwt-maven-plugin</artifactId>
		</plugin>
		...
	</plugins>
</build>]]></pre>
		</c:StaticCode>
		
		<w:Heading level="3" summary="docSummary">Running in standard DevMode</w:Heading>
		<w:Alert ><h4>Note :</h4><p>The standard DevMode is no more supported on Chrome for Linux or on Firefox</p></w:Alert>
		
		<p>Use <kbd>mvn gwt:run</kbd></p>
		
		<w:Heading level="3" summary="docSummary">Running in SuperDevMode</w:Heading>
		<p>To run the SuperDevMode you'll need the maven jetty plugin.</p>
		
		<p></p>
		<c:StaticCode configuration="{XML_CONFIGURATION}">
<pre><![CDATA[
<!-- Set the needed properties -->
<properties>
	<jetty.plugin.version>9.2.0.v20140526</jetty.plugin.version>
</properties>

<!-- Then configure the Maven plugins -->
<build>
	<pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.plugin.version}</version>
				<configuration>
					<webAppSourceDirectory>${webappDirectory}</webAppSourceDirectory>
					<contextPath>/</contextPath>
				</configuration>
			</plugin>
		</plugins>
	</pluginManagement>
	<plugins>
		<plugin>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-maven-plugin</artifactId>
		</plugin>
	</plugins>
</build>

<!-- To use different GWT module .xml files for development tasks, we use a maven profile -->
<profiles>
	<profile>
		<id>dev</id>
		<build>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>gwt-maven-plugin</artifactId>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<modules>
							<module>... Your Dev module ...</module>
						</modules>
						<draftCompile>true</draftCompile>
					</configuration>
				</plugin>
			</plugins>
		</build>
	</profile>
</profiles>]]></pre>
		</c:StaticCode>
		
		<p>Running in SuperDevMode :</p>
		<ul>
			<li>Run the code server <kbd>mvn -Pdev gwt:run-codeserver</kbd></li>
			<li>Go to <a href="http://localhost:9876" target="_BLANK">http://localhost:9876</a> and save the generated bookmarklets</li>
			<li>In Parallel, run Jetty (with a draft compile) : <kbd>mvn -Pdev jetty:run</kbd></li>
			<li>Go to <a href="http://localhost:8080" target="_BLANK">http://localhost:8080</a> (the link is provided on the maven console) and use the SuperDev bookmaklets to recompile the modules</li>
		</ul>
	</w:HTMLPanel>
</ui:UiBinder>