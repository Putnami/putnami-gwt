apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'gwt-base'
apply plugin: 'eclipse'


group = 'fr.putnami.pwt'
version = '1.1.1'

sourceCompatibility = 1.7
targetCompatibility = 1.7

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.5'
	}
}

ext {
	pwtVersion = '1.1.0'
}
	
configurations {
	log4j
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {	
	log4j 'org.slf4j:slf4j-api:1.6.1'
	log4j 'org.slf4j:jcl-over-slf4j:1.6.1'
	log4j 'org.slf4j:slf4j-log4j12:1.6.1'
	log4j 'log4j:log4j:1.2.16'

	runtime configurations.log4j	

	compile "fr.putnami.pwt:pwt:$pwtVersion"
	
	testCompile 'junit:junit:4.11'
}

//Include all non java (like *.gwt.xml) files from 'src/main/java' folder in resources
sourceSets.main.resources.srcDir 'src/main/java'

// Add all sources in jar (needed for GWT compilation using this library
jar {
	from sourceSets.main.allJava
}

gwt {
	gwtVersion='2.6.1'
	
	// The following is only needed if you don't use the Google Plugin for Eclipse.
	eclipse{
		addGwtContainer=false // Default set to true
	}
}

//Tweak to move the GWT container classpath entry to the end
// Must be defined after the gwt-plugin configuration
if (gwt.eclipse.addGwtContainer) {
	eclipse.classpath.file{
		whenMerged{ classpath ->
			def projectRefs = classpath.entries.findAll{entry -> entry.kind =='con' && entry.path.equals('com.google.gwt.eclipse.core.GWT_CONTAINER')}
			//move the project references to the end of the list:
			classpath.entries.removeAll(projectRefs)
			classpath.entries.addAll(projectRefs)
		}
	}
}

eclipse {
	classpath {
		downloadSources=true
	}
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

